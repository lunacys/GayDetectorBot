services:
  db:
    image: postgres
    volumes:
      - ./data/db:/var/lib/postgresql/data
    environment:
      - POSTGRES_DB=app
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=password
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5
    networks:
      - aspnetcoreapp-network
  gaydetectorbot.webapi:
    image: ${DOCKER_REGISTRY-}gaydetectorbotwebapi
    restart: always
    build:
      context: .
      dockerfile: GayDetectorBot.WebApi/Dockerfile
    networks:
      - aspnetcoreapp-network
    depends_on:
      db:
        condition: service_healthy
    links:
     - db:db
networks:
  aspnetcoreapp-network:
    driver: bridge